/**************************************************************************************
*	2019-4-15 温度控制   袁丁												  *
													  
***************************************************************************************/
#include "REG52.h"			 //此文件中定义了单片机的一些特殊功能寄存器
#include "XPT2046.h"	
typedef unsigned int u16;	  //对数据类型进行声明定义
typedef unsigned char u8;

sbit keyincadd = P1^0;	 //定义P10口是	增加温度的 加 +
sbit keyincsub = P1^1;	 //	 	减温度的 减 -
    sbit keysubadd = P1^2;	 //定义P10口是	增加温度的 加 +
sbit keysubsub = P1^3;	 //	 	减温度的 减 -
sbit keyfun = P1^4;	 //	 功能键

sbit led=P2^7;	 //定义P20口是led
    sbit LSA=P2^2;
sbit LSB=P2^3;
sbit LSC=P2^4 ;
u8 data   time100ms;	 //延时 100ms

uchar bdata  ibit;	
// sbit bit1 = ibit^0;
	sbit led2 = ibit^0;	

u8  disp[4] ;
u8 code smgduan[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};

 /*******************************************************************************
* 函 数 名         : delay
* 函数功能		   : 延时函数，i=1时，大约延时10us
*******************************************************************************/
void delay(u16 i)
{
         	while(i--);	
}

 /*******************************************************************************
* 函 数 名         : keypros
* 函数功能		   : 按键处理函数，判断按键K1是否按下
*******************************************************************************/
void keypros()
{
	if(keyincadd==0)		  //检测按键keyincadd是否按下
	{	
		delay(100);   //消除抖动 一般大约10ms
		if(keyincadd==0)	 //再次判断按键是否按下
		{
			led=~led;	  //led状态取反
		}
		while(!keyincadd);	 //检测按键是否松开
	}		
}

/**** 函数功能		 :数据处理函数	**/
void datapros()
{
	u16 temp;
	static u8 i;
	if(i==1)
	{
		i=0;
		temp = Read_AD_Data(0x94);		//   AIN1 0xD4热敏电阻；0x94 AIN0 电位器
	}
	i++;
	disp[0]=smgduan[temp/1000];//千位
	disp[1]=smgduan[temp%1000/100];//百位
	disp[2]=smgduan[temp%1000%100/10];//个位
	disp[3]=smgduan[temp%1000%100%10];		
}


/** 函数名         :DigDisplay()
* 函数功能		 :数码管显示函数   ****/
void DigDisplay()
{
	u8 i;
	for(i=0;i<4;i++)
	{
		switch(i)	 //位选，选择点亮的数码管，
		{
			case(0):
				LSA=0;LSB=0;LSC=0; break;//显示第0位
			case(1):
				LSA=1;LSB=0;LSC=0; break;//显示第1位
			case(2):
				LSA=0;LSB=1;LSC=0; break;//显示第2位
			case(3):
				LSA=1;LSB=1;LSC=0; break;//显示第3位	
		}
		P0=disp[i];//发送数据
		delay(100); //间隔一段时间扫描	
		P0=0x00;//消隐
	}		
}

/*******************************************************************************
* 函 数 名         : void Timer0() interrupt 1
* 函数功能		   : 定时器0中断函数
*******************************************************************************/
void Timer0() interrupt 1
{
	static u16 ini;
	TH0=0XFC;	//给定时器赋初值，定时1ms
	TL0=0X18;
	ini++;
	if(ini==1000)
	{
		ini=0;
		led=~led;	
	}
	if ( time100ms != 0 ) {
		time100ms--;
	}
 }

/*******************************************************************************
* 函 数 名       : main
* 函数功能		 : 主函数
*******************************************************************************/
void main()
{	
	TMOD|=0X01;//Timer0Init()    选择为定时器0模式，工作方式1，仅用TR0打开启动。
	TH0=0XFC;	//给定时器赋初值，定时1ms
	TL0=0X18;		ET0=1;//打开定时器0中断允许
	EA=1;//打开总中断
	TR0=1;//打开定时器
	time100ms = 100;		
	ibit = !ibit; 
	 led2 = 1;	
	while(1)
	{
		

		
		datapros();	 //数据处理函数
		DigDisplay();//数码管显示函数	
		keypros();	
	}		
}

